name: Build & test the Unity project

run-name: Build the game!

on:
  push:
    branches: ["main"]
    paths-ignore: 
      - '.github/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
      - '.vscode/**'
      - 'packages.json'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
      - '.vscode/**'
      - 'packages.json'
  workflow_dispatch:

permissions:
  actions: write

jobs:
  test:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - '.'
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache Library Folder
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      - name: Debug Project Directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of project path:"
          ls ${{ matrix.projectPath }}

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: List Workspace Contents
        run: |
          echo "Listing workspace contents..."
          ls -R

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ matrix.testMode }}-artifacts

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}

      - name: Debug Step Outputs
        if: always()
        run: |
          echo "Artifacts Path: ${{ matrix.testMode }}-artifacts"
          echo "Coverage Path: ${{ steps.tests.outputs.coveragePath }}"
